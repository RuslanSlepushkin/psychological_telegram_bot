# Generated by Django 4.2.3 on 2023-07-22 20:45

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("bot", "0004_alter_questionsabcmodel_text_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnswersBAI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField(verbose_name="Telegram User ID")),
                ("answers", models.JSONField(verbose_name="Answers")),
                ("result", models.IntegerField(verbose_name="Result BAI")),
                ("date", models.DateTimeField(verbose_name="Date and time")),
            ],
        ),
        migrations.CreateModel(
            name="AnswersEmotions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField(verbose_name="Telegram User ID")),
                ("answers", models.JSONField(verbose_name="Answers")),
                ("date", models.DateTimeField(verbose_name="Date and time")),
            ],
            options={
                "verbose_name": "Emotions Answer",
                "verbose_name_plural": "Emotions Answers",
            },
        ),
        migrations.CreateModel(
            name="AnswersFallingArrow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField(verbose_name="Telegram User ID")),
                ("answers", models.JSONField(verbose_name="Answers")),
                ("date", models.DateTimeField(verbose_name="Date and time")),
            ],
            options={
                "verbose_name": "Falling Arrow Answer",
                "verbose_name_plural": "Falling Arrow Answers",
            },
        ),
        migrations.CreateModel(
            name="AnswersHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_id", models.IntegerField(verbose_name="Telegram User ID")),
                ("answers", models.JSONField(verbose_name="Answers")),
                ("date", models.DateTimeField(verbose_name="Date and time")),
            ],
            options={
                "verbose_name": "History Answer",
                "verbose_name_plural": "History Answers",
            },
        ),
        migrations.CreateModel(
            name="QuestionsBAI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_text",
                    models.CharField(max_length=255, verbose_name="Question"),
                ),
                ("text", models.TextField(blank=True, null=True, verbose_name="Text")),
            ],
        ),
        migrations.CreateModel(
            name="QuestionsEmotions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_text",
                    models.TextField(blank=True, null=True, verbose_name="Question"),
                ),
                ("text", models.TextField(blank=True, null=True, verbose_name="Text")),
            ],
            options={
                "verbose_name": "Emotions Question",
                "verbose_name_plural": "Emotions Questions",
            },
        ),
        migrations.CreateModel(
            name="QuestionsFallingArrow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_text",
                    models.TextField(blank=True, null=True, verbose_name="Question"),
                ),
                ("text", models.TextField(blank=True, null=True, verbose_name="Text")),
            ],
            options={
                "verbose_name": "Falling Arrow Question",
                "verbose_name_plural": "Falling Arrow Questions",
            },
        ),
        migrations.CreateModel(
            name="QuestionsHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question_text",
                    models.TextField(blank=True, null=True, verbose_name="Question"),
                ),
                ("text", models.TextField(blank=True, null=True, verbose_name="Text")),
            ],
            options={
                "verbose_name": "History Question",
                "verbose_name_plural": "History Questions",
            },
        ),
        migrations.AlterModelOptions(
            name="tguser",
            options={
                "verbose_name": "Telegram User",
                "verbose_name_plural": "Telegram Users",
            },
        ),
        migrations.AddField(
            model_name="tguser",
            name="first_name",
            field=models.CharField(
                max_length=100, null=True, verbose_name="First name"
            ),
        ),
        migrations.AlterField(
            model_name="answersabcmodel",
            name="answers",
            field=models.JSONField(verbose_name="Answers"),
        ),
        migrations.AlterField(
            model_name="answersabcmodel",
            name="date",
            field=models.DateTimeField(verbose_name="Date and time"),
        ),
        migrations.AlterField(
            model_name="answersworklist",
            name="answers",
            field=models.JSONField(verbose_name="Answers"),
        ),
        migrations.AlterField(
            model_name="answersworklist",
            name="date",
            field=models.DateTimeField(verbose_name="Date and time"),
        ),
        migrations.AlterField(
            model_name="questionsabcmodel",
            name="question_text",
            field=models.TextField(blank=True, null=True, verbose_name="Question"),
        ),
        migrations.AlterField(
            model_name="questionsabcmodel",
            name="text",
            field=models.TextField(blank=True, null=True, verbose_name="Text"),
        ),
        migrations.AlterField(
            model_name="questionsworklist",
            name="question_text",
            field=models.TextField(blank=True, null=True, verbose_name="Question"),
        ),
        migrations.AlterField(
            model_name="questionsworklist",
            name="text",
            field=models.TextField(blank=True, null=True, verbose_name="Text"),
        ),
    ]
